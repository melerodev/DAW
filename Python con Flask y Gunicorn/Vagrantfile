Vagrant.configure("2") do |config|
  config.vm.box = "debian/bullseye64"

  # Máquina maestro
  config.vm.define "FLASK-GUNICORN" do |pythonweb|
    pythonweb.vm.hostname = "FLASK-GUNICORN.sistema.test"
    pythonweb.vm.network "public_network" # Clase
    pythonweb.vm.provider "virtualbox" do |vb|
      vb.name = "FLASK-GUNICORN"
    end
    pythonweb.vm.provision "shell", inline: <<-SHELL
      echo "-------------------INSTALACIÓN DE PAQUETES-------------------"
      sudo apt-get update -y
      sudo apt-get install -y nginx python3-pip
      pip3 install pipenv
      pipenv --version
      pip3 install python-dotenv
      echo "-------------------INSTALACIÓN DE PAQUETES-------------------"

      echo "-------------------CONFIGURACIÓN DE NGINX-------------------"
      sudo systemctl status nginx
      sudo mkdir -p /var/www/app
      sudo chown -R $USER:www-data /var/www/app
      sudo chmod -R 755 /var/www/app
      sudo cp /vagrant/config/.env /var/www/app
      sudo cp /vagrant/config/amz /etc/nginx/sites-available/default
      sudo ln -s /etc/nginx/sites-available/amz /etc/nginx/sites-enabled/default
      sudo systemctl restart nginx
      sudo systemctl status nginx
      echo "-------------------CONFIGURACIÓN DE NGINX-------------------"
    SHELL

    pythonweb.vm.provision "shell", privileged: false, inline: <<-SHELL
      echo "-------------------INSTALACIÓN Y CONFIGURACIÓN DE FLASK Y GUNICORN-------------------"
      cd /var/www/app
      # pipenv shell
      # pipenv run pip install flask gunicorn
      cp /vagrant/config/application.py /var/www/app
      cp /vagrant/config/wsgi.py /var/www/app
      # flask run --host '0.0.0.0'
      # gunicorn --workers 4 --bind 0.0.0.0:5000 wsgi:app
      echo "-------------------INSTALACIÓN Y CONFIGURACIÓN DE FLASK Y GUNICORN-------------------"
    SHELL
  end
end
